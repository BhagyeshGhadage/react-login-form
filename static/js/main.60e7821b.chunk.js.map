{"version":3,"sources":["components/LogIn.js","components/Validation.js","components/Registration.js","components/Form.js","components/Welcome.js","App.js","reportWebVitals.js","index.js"],"names":["LogIn","getData","localStorage","getItem","getObj","JSON","parse","useState","logName","logPassword","UserData","setUserData","errors","setErrors","history","useHistory","handleInput","e","target","name","value","handleLogin","preventDefault","username","password","push","onSubmit","className","htmlFor","type","autoComplete","id","onChange","onClick","Validation","values","emailPattern","RegExp","email","test","length","Registration","isSubmitted","setisSubmitted","validation","Object","keys","setItem","stringify","disabled","Form","Welcome","clear","App","exact","path","component","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.60e7821b.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { MdAccountBox } from \"react-icons/md\";\r\nimport { BsLockFill, BsPersonFill } from \"react-icons/bs\"\r\n\r\nconst LogIn = () => {\r\n    const getData = localStorage.getItem('userData');\r\n    const getObj = JSON.parse(getData);\r\n    const [UserData, setUserData] = useState({ logName: \"\", logPassword: \"\" })\r\n    const [errors, setErrors] = useState(false)\r\n    const history = useHistory();\r\n\r\n    const handleInput = (e) => {\r\n        setUserData({ ...UserData, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (getObj.username === UserData.logName && getObj.password === UserData.logPassword) {\r\n            history.push(\"/welcome\");\r\n        } else {\r\n            setErrors(true)\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <form onSubmit={handleLogin}>\r\n                <div className=\"item-data\">\r\n                    <div className=\"icon\"><MdAccountBox /></div>\r\n                    <label htmlFor=\"logName\">User name</label>\r\n                    <div className=\"item-input\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"input-icon\"><BsPersonFill /></span>\r\n                        </div>\r\n                        <input type=\"text\" autoComplete=\"off\" className=\"input-field\"\r\n                            name=\"logName\"\r\n                            id=\"logName\"\r\n                            value={UserData.logName}\r\n                            onChange={handleInput}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"item-data\">\r\n                    <label htmlFor=\"logPassword\">Password</label>\r\n                    <div className=\"item-input\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"input-icon\"><BsLockFill /></span>\r\n                        </div>\r\n                        <input type=\"password\" autoComplete=\"off\" className=\"input-field\"\r\n                            name=\"logPassword\"\r\n                            id=\"logPassword\"\r\n                            value={UserData.logPassword}\r\n                            onChange={handleInput}\r\n                        />\r\n                    </div>\r\n                    {errors && <p className=\"error\">User name or Password is incorrect.</p>}\r\n                </div>\r\n                <button className=\"btn\" onClick={handleLogin}>Login</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LogIn\r\n","const Validation = (values) => {\r\n    var emailPattern = new RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\r\n\r\n    let errors = {}\r\n    if (!values.username) {\r\n        errors.username = \"User name is required\"\r\n    }\r\n    if (!values.email) {\r\n        errors.email = \"Email is required\"\r\n    } else if (!emailPattern.test(values.email)) {\r\n        errors.email = \"Email is invalid\"\r\n    }\r\n    if (!values.password) {\r\n        errors.password = \"Password is required\"\r\n    } else if (values.password.length < 5) {\r\n        errors.password = \"Password must be more than five characters.\"\r\n    }\r\n    return errors\r\n}\r\n\r\nexport default Validation","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport validation from './Validation'\r\nimport { MdAccountBox } from \"react-icons/md\";\r\nimport { BsFillEnvelopeFill, BsLockFill, BsPersonFill } from \"react-icons/bs\"\r\n\r\nconst Registration = () => {\r\n    const history = useHistory();\r\n    const getData = localStorage.getItem('userData');   \r\n    const [UserData, setUserData] = useState({ username: \"\", email: \"\", password: \"\" })\r\n    const [errors, setErrors] = useState({})\r\n    const [isSubmitted, setisSubmitted] = useState(false)\r\n\r\n    const handleInput = (e) => {\r\n        setUserData({ ...UserData, [e.target.name]: e.target.value })\r\n        setErrors(validation(UserData))\r\n    }\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n        setErrors(validation(UserData))\r\n        if (Object.keys(errors).length === 0 && UserData.username != \"\" && UserData.email != \"\" && UserData.password != \"\")  {\r\n            setisSubmitted(true)\r\n            history.push(\"/\");\r\n            localStorage.setItem('userData', JSON.stringify(UserData))\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div className=\"register-wrapper\">\r\n            <h1>Registration</h1>\r\n            <form>\r\n                <div className=\"icon\"><MdAccountBox /></div>\r\n                <div className=\"item-data\">\r\n                    <label htmlFor=\"username\">User name</label>\r\n                    <div className=\"item-input\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"input-icon\"><BsPersonFill /></span>\r\n                        </div>\r\n                        <input type=\"text\" autoComplete=\"off\" className=\"input-field\"\r\n                            name=\"username\"\r\n                            id=\"username\"\r\n                            value={UserData.username}\r\n                            onChange={handleInput}\r\n                        />\r\n                    </div>\r\n                    {errors.username && <p className=\"error\">{errors.username}</p>}\r\n                </div>\r\n                <div className=\"item-data\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <div className=\"item-input\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"input-icon\"><BsFillEnvelopeFill /></span>\r\n                        </div>\r\n                        <input type=\"text\" autoComplete=\"off\" className=\"input-field\"\r\n                            name=\"email\"\r\n                            id=\"email\"\r\n                            value={UserData.email}\r\n                            onChange={handleInput}\r\n                        />\r\n                    </div>\r\n                    {errors.email && <p className=\"error\">{errors.email}</p>}\r\n                </div>\r\n                <div className=\"item-data\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <div className=\"item-input\">\r\n                        <div className=\"item-icon\">\r\n                            <span className=\"input-icon\"><BsLockFill /></span>\r\n                        </div>\r\n                        <input type=\"password\" autoComplete=\"off\" className=\"input-field\"\r\n                            name=\"password\"\r\n                            id=\"password\"\r\n                            value={UserData.password}\r\n                            onChange={handleInput}\r\n                        />\r\n                    </div>\r\n                    {errors.password && <p className=\"error\">{errors.password}</p>}\r\n                </div>\r\n            </form>\r\n            <button className=\"btn\" onClick={handleRegister} disabled={isSubmitted}>Registration</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Registration\r\n","import React from 'react'\r\nimport Registration from './Registration'\r\nimport LogIn from './LogIn'\r\nimport './Form.css';\r\n\r\nconst Form = () => {\r\n    const getData = localStorage.getItem('userData');\r\n    return (\r\n        <div className=\"form-container\">\r\n            {!getData ? (<Registration />) : (<LogIn />)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","import { useHistory } from 'react-router-dom'\r\nimport { IoPowerSharp } from \"react-icons/io5\";\r\nimport './Welcome.css';\r\n\r\nconst Welcome = () => {\r\n    const history = useHistory();\r\n    const getData = localStorage.getItem('userData');\r\n    const getObj = JSON.parse(getData);\r\n    \r\n    const handleLogout = (e) => {\r\n        localStorage.clear()\r\n        history.push(\"/\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"welcome-wrapper\">\r\n            <div className=\"item-container\">\r\n                <div className=\"item-data\">\r\n                    <h2>Welcome {!getData ? 'Test user' : getObj.username} </h2>\r\n                    <h2>Thank you signing up Ampra Solutions.</h2>\r\n                    <p className=\"text\">We are passionate professionals with more than 15 years of individual experience in innovative software design and development across multiple industries segments - retail, life sciences, automobile, banking, insurance & financial services to name a few.</p>\r\n                    <p className=\"text\">We provide consulting and software development services in Supply chain, Customer relationship management, Data and Analytics.</p>\r\n                    <p className=\"text\">We specialise in package implementation, custom application development, mobile application development, cloud migration, cloud application development and test automation services.</p>\r\n                    <button className=\"btn\" onClick={handleLogout}>\r\n                        <span className=\"input-icon\"><IoPowerSharp /></span>\r\n                        <span className=\"input-title\">Logout</span></button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Welcome\r\n","import { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom'\nimport LogIn from './components/LogIn'\nimport Form from './components/Form'\nimport Welcome from './components/Welcome'\n\nfunction App() {\n  return (\n    <div className=\"form-wrapper\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Form} />\n          <Route exact path=\"/login\" component={LogIn} />\n          <Route exact path=\"/welcome\" component={Welcome} />\n          <Redirect to=\"/\" />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}